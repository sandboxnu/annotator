apply plugin: 'com.android.application'
def keys = rootProject.file("secrets.properties")
def keyProperties = new Properties()
keyProperties.load(new FileInputStream(keys))

/*
Config file format, as loaded into keyProperties:

bucket=""
upload_endpoint=""
sftp_host=""
sftp_user=""
sftp_pass=""
sftp_working_dir=""
aws_accesskey=""
aws_accesspass=""
 */

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }
    defaultConfig {
        applicationId "com.sandboxnu.annotator"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // https://medium.com/@geocohn/keeping-your-android-projects-secrets-secret-393b8855765d
        // https://hybridglobalinc.com/articles/managing-android-build-variant-globals-using-gradle/

        buildConfigField("String", "BUCKET_NAME", keyProperties['bucket'])
        buildConfigField("String", "UPLOAD_ENDPOINT", keyProperties['upload_endpoint'])
        buildConfigField("String", "SFTP_HOST", keyProperties['sftp_host'])
        buildConfigField("String", "SFTP_USER", keyProperties['sftp_user'])
        buildConfigField("String", "SFTP_PASS", keyProperties['sftp_pass'])
        buildConfigField("String", "SFTP_DIR", keyProperties['sftp_working_dir'])
        buildConfigField("String", "AWS_PUB", keyProperties['aws_accesskey'])
        buildConfigField("String", "AWS_SECRET", keyProperties['aws_accesspass'])
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

apply plugin: 'com.amazonaws.appsync'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //Base SDK
    implementation 'com.amazonaws:aws-android-sdk-core:2.15.+'
    //AppSync SDK
    implementation 'com.amazonaws:aws-android-sdk-appsync:2.8.+'
    implementation 'com.amazonaws:aws-android-sdk-core:2.6.+'
    implementation 'com.amazonaws:aws-android-sdk-cognito:2.2.+'
    implementation 'com.amazonaws:aws-android-sdk-s3:2.6.+'
    implementation 'com.amazonaws:aws-android-sdk-ddb:2.2.+'
    implementation 'com.amazonaws:aws-android-sdk-appsync:2.7.+'


    implementation 'com.amazonaws:aws-android-sdk-core:2.6.+'
    implementation 'com.amazonaws:aws-android-sdk-cognito:2.2.+'
    implementation 'com.amazonaws:aws-android-sdk-s3:2.6.+'
    implementation 'com.amazonaws:aws-android-sdk-ddb:2.2.+'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'commons-codec:commons-codec:1.13'
    implementation 'com.jcraft:jsch:0.1.44-1'


    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}


